# 1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса
# (метод __init__()), который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин,
# расположенных в виде прямоугольной схемы.
# Примеры матриц вы найдете в методичке.
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов
# класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно —
# первый элемент первой строки первой матрицы складываем с первым элементом первой строки
# второй матрицы и т.д.
""""""

class Matrix:
    def __init__(self, matrix1, matrix2):
        self.matrix1 = matrix1
        self.matrix2 = matrix2

    def __add__(self):
        result = [[0, 0, 0],
                [0, 0, 0],
                [0, 0, 0]]

        for i in range(len(self.matrix1)):

            for j in range(len(self.matrix2[i])):
                result[i][j] = self.matrix1[i][j] + self.matrix2[i][j]

        return str('\n'.join(['\t'.join([str(j) for j in i]) for i in result]))

    def __str__(self):
        return str('\n'.join(['\t'.join([str(j) for j in i]) for i in result]))

mtr = Matrix([[51, 18, 111],
                    [63, 12, 143],
                    [41, 50, 9]],
                   [[45, 8, 23],
                    [6, 72, 93],
                    [24, 52, 97]])

print(f'Результатом сложения двух матриц - {mtr.matrix1} + {mtr.matrix2} =')
print(mtr.__add__())

